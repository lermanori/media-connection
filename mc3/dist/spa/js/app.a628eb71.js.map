{"version":3,"sources":["webpack:///./.quasar/import-quasar.js","webpack:///./src/App.vue?03a6","webpack:///./src/App.vue?a28e","webpack:///src/App.vue","webpack:///./src/App.vue","webpack:///./src/store/index.js","webpack:///./src/router/routes.js","webpack:///./src/router/index.js","webpack:///./.quasar/app.js","webpack:///./src/boot/axios.js","webpack:///./.quasar/client-entry.js"],"names":["Vue","use","Quasar","config","components","QLayout","QHeader","QDrawer","QPageContainer","QPage","QToolbar","QToolbarTitle","QBtn","QIcon","QList","QItem","QItemSection","QItemLabel","QCard","QCardSection","QCardActions","QBtnGroup","QInput","QPageSticky","QImg","QDate","QPopupProxy","QFab","QFabAction","QSeparator","QTimeline","QTimelineEntry","QDialog","QBanner","QSpace","QBadge","QLinearProgress","QTabPanels","QTabPanel","QTabs","QTab","QRouteTab","directives","Ripple","ClosePopup","plugins","Notify","Dialog","src_Appvue_type_script_lang_js_","name","App","Object","componentNormalizer","_h","this","$createElement","_c","_self","attrs","id","Vuex","src_store","Store","state","projectsArr","user","loggedIn","userObj","getters","projects","mutations","addProject","obj","push","addEntry","index","project_roadmap","entry","syncProjects","setAuthUser","console","log","clearAuthUser","actions","context","axios","post","then","response","data","commit","_id","url","concat","res","get","auth","clearAuth","strict","process","AuthMidlleware","to","from","next","Axios","routes","path","component","__webpack_require__","e","bind","children","beforeEnter","VueRouter","store","router","src_router","scrollBehavior","x","y","mode","base","boot_axios","_ref2","asyncToGenerator_default","regenerator_default","a","mark","_callee","_ref","wrap","_context","prev","prototype","$axios","stop","_x","apply","arguments","createStore","createRouter","$router","app","el","render","h","bootFiles","i","b_Bootaxios","length","ssrContext","t0","window","location","href","abrupt","error","start"],"mappings":"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","file":"js/app.a628eb71.js","sourcesContent":["/**\n * THIS FILE IS GENERATED AUTOMATICALLY.\n * DO NOT EDIT.\n *\n * You are probably looking on adding startup/initialization code.\n * Use \"quasar new boot <name>\" and add it there.\n * One boot file per concern. Then reference the file(s) in quasar.conf.js > boot:\n * boot: ['file', ...] // do not add \".js\" extension to it.\n *\n * Boot files are your \"main.js\"\n **/\n\n\nimport Vue from 'vue'\n\nimport {Quasar,QLayout,QHeader,QDrawer,QPageContainer,QPage,QToolbar,QToolbarTitle,QBtn,QIcon,QList,QItem,QItemSection,QItemLabel,QCard,QCardSection,QCardActions,QBtnGroup,QInput,QPageSticky,QImg,QDate,QPopupProxy,QFab,QFabAction,QSeparator,QTimeline,QTimelineEntry,QDialog,QBanner,QSpace,QBadge,QLinearProgress,QTabPanels,QTabPanel,QTabs,QTab,QRouteTab,Ripple,ClosePopup,Notify,Dialog} from 'quasar'\n\n\nVue.use(Quasar, { config: {},components: {QLayout,QHeader,QDrawer,QPageContainer,QPage,QToolbar,QToolbarTitle,QBtn,QIcon,QList,QItem,QItemSection,QItemLabel,QCard,QCardSection,QCardActions,QBtnGroup,QInput,QPageSticky,QImg,QDate,QPopupProxy,QFab,QFabAction,QSeparator,QTimeline,QTimelineEntry,QDialog,QBanner,QSpace,QBadge,QLinearProgress,QTabPanels,QTabPanel,QTabs,QTab,QRouteTab},directives: {Ripple,ClosePopup},plugins: {Notify,Dialog} })\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"q-app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","<template>\n  <div id=\"q-app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n</style>\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=491840de&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\n\n// import example from './module-example'\n\nVue.use(Vuex);\n\n/*\n * If not building with SSR mode, you can\n * directly export the Store instantiation\n */\n\nexport default function ( /* { ssrContext } */ ) {\n  const Store = new Vuex.Store({\n    state: {\n      projectsArr: [],\n      user: {\n        loggedIn: false,\n        userObj: {}\n      }\n    },\n    getters: {\n      projects: function (state) {\n        return state.projectsArr;\n      },\n      loggedIn: function (state) {\n        return state.user.loggedIn;\n      },\n    },\n    mutations: {\n      addProject(state, obj) {\n        state.projectsArr.push(obj);\n      },\n      addEntry(state, obj) {\n        state.projectsArr[obj.index].project_roadmap.push(obj.entry)\n      },\n      syncProjects(state, obj) {\n        state.projectsArr = obj;\n      },\n      setAuthUser(state, user) {\n        state.user.userObj = user;\n        if (user != \"\")\n          state.user.loggedIn = true;\n        console.log('store get logged:' + state.user.loggedIn);\n      },\n      clearAuthUser(state) {\n        state.user.userObj = {};\n        state.user.loggedIn = false;\n      }\n    },\n    actions: {\n      addProject(context, obj) {\n        return axios.post(\"api/projects\", obj).then((response) => {\n          console.log(response.data)\n          context.commit('addProject', response.data);\n        })\n      },\n      addEntry(context, obj) {\n        let id = context.state.projectsArr[obj.index]._id;\n        console.log(id);\n        let url = `api/projects/${id}/entry`;\n        axios.post(url, obj.entry).then((res) => {\n          console.log(res);\n          context.commit('addEntry', obj);\n        });\n      },\n      syncProjects(context, obj) {\n        let url = `api/projects/`;\n        axios.get(url).then((data) => {\n          context.commit('syncProjects', data.data)\n        })\n      },\n      auth(context) {\n        axios.get('/auth').then((data) => {\n          context.commit('setAuthUser', data.data);\n        })\n      },\n      clearAuth(context) {\n        context.commit('clearAuthUser');\n      }\n\n\n    },\n    \n    \n    //enable strict mode (adds overhead!)\n    // for dev mode only\n    strict: process.env.DEV\n    \n  });\n\n  return Store;\n}\n","import store from \"../store\";\nimport Axios from \"axios\";\n\nconst AuthMidlleware = (to, from, next) => {\n  Axios.get('/auth').then((response) => {\n    let user = response.data;\n    if (user == \"\")\n      next('/');\n    else\n      next();\n  })\n};\n\n\nconst routes = [{\n    path: \"/\",\n    component: () => import(\"layouts/MyLayout.vue\"),\n    children: [{\n      path: \"\",\n      component: () => import(\"pages/Index.vue\")\n    }]\n  },\n  {\n    path: \"/register\",\n    component: () => import(\"layouts/MyLayout.vue\"),\n    children: [{\n      path: \"\",\n      component: () => import(\"pages/register.vue\")\n    }]\n  },\n  {\n    path: \"/grid\",\n    component: () => import(\"layouts/MyLayout.vue\"),\n    children: [{\n      path: \"\",\n      component: () => import(\"pages/grid.vue\")\n    }]\n  },\n  {\n    path: \"/taskManager\",\n    component: () => import(\"layouts/MyLayout.vue\"),\n    children: [{\n      path: \"\",\n      component: () => import(\"pages/taskManager.vue\")\n    }],\n    beforeEnter: AuthMidlleware\n  },\n\n  {\n    path: \"/dashboard\",\n    component: () => import(\"layouts/MyLayout.vue\"),\n    children: [{\n      path: \"\",\n      component: () => import(\"pages/Dashboard.vue\")\n    }],\n    beforeEnter: AuthMidlleware\n  }\n];\n\n\n// Always leave this as last one\nif (process.env.MODE !== \"ssr\") {\n  routes.push({\n    path: \"*\",\n    component: () => import(\"pages/Error404.vue\")\n  });\n}\n\nexport default routes;\n","import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\n\nimport routes from \"./routes\";\n\nVue.use(VueRouter);\n\n/*\n * If not building with SSR mode, you can\n * directly export the Router instantiation\n */\n\nexport default function(/* { store, ssrContext } */) {\n  const Router = new VueRouter({\n    scrollBehavior: () => ({ x: 0, y: 0 }),\n    routes,\n\n    // Leave these as is and change from quasar.conf.js instead!\n    // quasar.conf.js -> build -> vueRouterMode\n    // quasar.conf.js -> build -> publicPath\n    mode: process.env.VUE_ROUTER_MODE,\n    base: process.env.VUE_ROUTER_BASE\n  });\n\n\n\n  return Router;\n}\n","/**\n * THIS FILE IS GENERATED AUTOMATICALLY.\n * DO NOT EDIT.\n *\n * You are probably looking on adding startup/initialization code.\n * Use \"quasar new boot <name>\" and add it there.\n * One boot file per concern. Then reference the file(s) in quasar.conf.js > boot:\n * boot: ['file', ...] // do not add \".js\" extension to it.\n *\n * Boot files are your \"main.js\"\n **/\nimport Vue from 'vue'\nimport './import-quasar.js'\n\n\n\nimport App from 'app/src/App.vue'\n\n\nimport createStore from 'app/src/store/index'\n\nimport createRouter from 'app/src/router/index'\n\nexport default function () {\n  // create store and router instances\n  \n  const store = typeof createStore === 'function'\n    ? createStore({Vue})\n    : createStore\n  \n  const router = typeof createRouter === 'function'\n    ? createRouter({Vue, store})\n    : createRouter\n  \n  // make router instance available in store\n  store.$router = router\n  \n\n  // Create the app instantiation Object.\n  // Here we inject the router, store to all child components,\n  // making them available everywhere as `this.$router` and `this.$store`.\n  const app = {\n    el: '#q-app',\n    router,\n    store,\n    render: h => h(App)\n  }\n\n  \n\n  // expose the app, the router and the store.\n  // note we are not mounting the app here, since bootstrapping will be\n  // different depending on whether we are in a browser or on the server.\n  return {\n    app,\n    store,\n    router\n  }\n}\n","import axios from 'axios'\n\nexport default async ({ Vue }) => {\n  Vue.prototype.$axios = axios\n}\n","/**\n * THIS FILE IS GENERATED AUTOMATICALLY.\n * DO NOT EDIT.\n *\n * You are probably looking on adding startup/initialization code.\n * Use \"quasar new boot <name>\" and add it there.\n * One boot file per concern. Then reference the file(s) in quasar.conf.js > boot:\n * boot: ['file', ...] // do not add \".js\" extension to it.\n *\n * Boot files are your \"main.js\"\n **/\n\n\n\nimport '@quasar/extras/roboto-font/roboto-font.css'\n\nimport '@quasar/extras/material-icons/material-icons.css'\n\n\n\nimport '@quasar/extras/animate/fadeInDown.css'\n\nimport '@quasar/extras/animate/fadeOutUp.css'\n\n\nimport 'quasar-styl'\n\n\nimport 'src/css/app.styl'\n\n\nimport Vue from 'vue'\nimport createApp from './app.js'\n\n\n\n\nimport b_Bootaxios from 'boot/axios'\n\n\n\n\n\n\n\n\n\n\n\n\nconst { app, store, router } = createApp()\n\n\n\nasync function start () {\n  \n  const bootFiles = [b_Bootaxios]\n  for (let i = 0; i < bootFiles.length; i++) {\n    try {\n      await bootFiles[i]({\n        app,\n        router,\n        store,\n        Vue,\n        ssrContext: null\n      })\n    }\n    catch (err) {\n      if (err && err.url) {\n        window.location.href = err.url\n        return\n      }\n\n      console.error('[Quasar] boot error:', err)\n      return\n    }\n  }\n  \n\n  \n\n    \n\n    \n\n      new Vue(app)\n\n    \n\n  \n\n}\n\nstart()\n"],"sourceRoot":""}